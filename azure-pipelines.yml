# Azure DevOps Pipeline for a Node.js project using React
# This pipeline installs Node.js, builds the project, and publishes build artifacts.
# Documentation: https://learn.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:
  # Azure Resource Manager connection
  azureSubscription: '67067b42-47d0-49d9-80ef-0c5c5ce1bf89'

  # Web app name
  webAppName: 'EASYPROCONNECT-DEMO'

  # Environment name
  environmentName: 'EASYPROCONNECT-DEMO'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

# Utilisation d'un agent auto-hébergé pour cohérence
pool:
  name: 'Default' # Assurez-vous que c'est le pool dans lequel l'agent est enregistré
  demands:
    - Agent.Name -equals EasyProTest  # Remplacez "EasyProTest" par le nom réel de l'agent

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build Job
    steps:
    # Étape 1 : Installez Node.js
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    # Étape 2 : Installation des dépendances, création et test
    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    # Étape 3 : Archivage des fichiers de build
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    # Étape 4 : Publication des artefacts de build
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish Build Artifacts'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy Job
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          # Étape 5 : Déploiement sur Azure Web App
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: EASYPROCONNECT-DEMO'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|20LTS'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'
